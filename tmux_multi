#!/usr/bin/env bash
set -e

progname=$(basename $0)

usage() {
    cat <<EOT
Usage:
    $progname command \; [arg ... | -f file ...]
EOT
}

split_window() {
    if [ $is_first -ne 1 ]; then
        tmux split-window
        tmux select-layout tiled
    fi
    tmux send-keys "${cmd//\{\}/$1}"
}

before_semicolon=1
while [ -n "$1" ]; do
    case "$1" in
        '-h'|'--help')
            usage
            exit 1
            ;;
        '-f'|'--file')
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "option requires an argument -- $1" 1>&2
                exit 1
            fi
            shift
            while [[ -n "$1" ]] && [[ ! "$1" =~ ^-+ ]]; do
                files+=( "$1" )
                shift
            done
            continue
            ;;
        -*)
            echo "illegal option -- '$(echo $1 | sed 's/^-*//')'" 1>&2
            exit 1
            ;;
        *)
            if [ $before_semicolon -eq 1 ]; then
                while [[ -n $1 ]] && [[ "$1" != ';' ]]; do
                    cmd+=( "$1" )
                    shift
                done
                if [ "$1" != ';' ]; then
                    echo 'semicolon is required'
                    usage
                    exit 1
                fi
                before_semicolon=0
                shift
            else
                while [[ -n "$1" ]] && [[ ! "$1" =~ ^-+ ]]; do
                    args+=( "$1" )
                    shift
                done
            fi
            ;;
    esac
done

if [ -z "$args" -a -z "$files" ]; then
    echo 'args or files are required.'
    usage
    exit 1
fi

cmd="${cmd[@]}"

if [ -n "$TMUX" ];then
    # tmux内にいる時は新しいウィンドウを作る
    tmux new-window
else
    # 新しいセッションを作ってデタッチ
    session_name=multi-ssh-`date +%s`
    tmux new-session -d -s $session_name
fi

is_first=1
if [ ! -z "$files" ]; then
    file_num=${#files[@]}
    for ((i = 0; i < $file_num; i++)) {
        file="${files[$i]}"
        if [ ! -f "$file" ]; then
            echo "no such file: $file"
            tmux kill-window
            exit 1
        fi
        while read line; do
            # #で始まる行はスキップ
            if [[ "$line" =~ ^\ *# ]]; then
                continue
            fi
            split_window "$line"
            is_first=0
        done < "$file"
    }
else
    arg_num=${#args[@]}
    for ((i = 0; i < $arg_num; i++)) {
        split_window "${args[i]}"
        is_first=0
    }
fi

# paneの同期モードを設定
tmux set-window-option synchronize-panes on

# 分割したペインをセレクト
if [ -z "$TMUX" ]; then
    tmux -2 attach-session
fi
